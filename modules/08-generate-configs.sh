#!/usr/bin/env bash
#===============================================================
#Script Name: 08-generate-configs.sh
#Date: 09/22/2025
#Created By: T03KNEE
#Github: https://github.com/To3Knee/Salt-Shaker
#Version: 1.0
#Short: Generate salt configs
#About: Builds salt master/ssh configs tailored to this project layout.
#===============================================================
#!/bin/bash
# Script Name: 08-generate-configs.sh
# Date: 10/04/2025
# Created By: T03KNEE
# Github: https://github.com/To3Knee/Salt-Shaker
# Version: 1.0
# Short: Write runtime configs
# About: Generates runtime/conf and related files from CSV.
#!/bin/bash
set -euo pipefail
LC_ALL=C

ROOT="${SALT_SHAKER_ROOT:-$(cd "$(dirname "${BASH_SOURCE[0]:-$0}")/.." && pwd)}"
RUNTIME_DIR="${SALT_SHAKER_RUNTIME_DIR:-$ROOT/runtime}"
CONF_DIR="$RUNTIME_DIR/conf"
ROSTER_DIR="$RUNTIME_DIR/roster"
FILES_DIR="$RUNTIME_DIR/file-roots"
PILLAR_DIR="$RUNTIME_DIR/pillar"
LOG="$ROOT/logs/salt-shaker.log"

csv_master="$ROOT/roster/data/hosts_all_pods.csv"  # CSV-only master

log(){ printf '%s [CFG] %s\n' "$(date '+%F %T')" "$1" | tee -a "$LOG" >&2; }

mkdir -p "$CONF_DIR" "$ROSTER_DIR" "$FILES_DIR" "$PILLAR_DIR" "$ROOT/logs"

# Validate CSV presence, but DON'T generate roster here.
if [ ! -f "$csv_master" ]; then
  log "CSV master not found: $csv_master (run 02-create-csv.sh)"
else
  log "CSV master detected: $csv_master"
fi

# Master config (runtime-first)
MASTER="$CONF_DIR/master"
cat > "$MASTER" <<EOF
# Salt-Shaker runtime master config (ssh mode)
cachedir: $ROOT/.cache
log_file: $ROOT/logs/salt-shaker.log
log_level: info

# runtime-first paths
file_roots:
  base:
    - $FILES_DIR
pillar_roots:
  base:
    - $PILLAR_DIR

# ssh opts
transport: ssh
ssh_log_file: $ROOT/logs/ssh.log
regen_thin: True
thin_dir: $ROOT/vendor/thin

# roster defaults (runtime-only)
roster_file: $ROSTER_DIR/roster.yaml

# safer ssh defaults for ad-hoc testing
# (known_hosts suppressed; set via wrappers --ignore-host-keys)
EOF

# Minimal file_roots/pillar defaults if empty
[ -f "$FILES_DIR/top.sls" ] || cat > "$FILES_DIR/top.sls" <<'EOF'
base:
  '*':
    - init
EOF
[ -f "$FILES_DIR/init.sls" ] || cat > "$FILES_DIR/init.sls" <<'EOF'
test_echo:
  cmd.run:
    - name: 'echo salt-shaker-ok'
EOF
[ -f "$PILLAR_DIR/top.sls" ] || cat > "$PILLAR_DIR/top.sls" <<'EOF'
base:
  '*':
    - data
EOF
[ -f "$PILLAR_DIR/data.sls" ] || cat > "$PILLAR_DIR/data.sls" <<'EOF'
example_key: example_value
EOF

log "Configs written:"
log "  $MASTER"
log "  $ROSTER_DIR/ (roster YAML generated by module 09)"
